//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAP_Reports_MVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UserTrainingxDBEntities : DbContext
    {
        public UserTrainingxDBEntities()
            : base("name=UserTrainingxDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OACT> OACTs { get; set; }
        public virtual DbSet<OCRD> OCRDs { get; set; }
        public virtual DbSet<OCRG> OCRGs { get; set; }
        public virtual DbSet<OUSR> OUSRs { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> spCashAccountOB(string cashAccount, string fromDate)
        {
            var cashAccountParameter = cashAccount != null ?
                new ObjectParameter("CashAccount", cashAccount) :
                new ObjectParameter("CashAccount", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spCashAccountOB", cashAccountParameter, fromDateParameter);
        }
    
        public virtual ObjectResult<spCashFlow_Result> spCashFlow(string cashAccount, string fromAccount, string toAccount, string fromDate, string toDate)
        {
            var cashAccountParameter = cashAccount != null ?
                new ObjectParameter("CashAccount", cashAccount) :
                new ObjectParameter("CashAccount", typeof(string));
    
            var fromAccountParameter = fromAccount != null ?
                new ObjectParameter("FromAccount", fromAccount) :
                new ObjectParameter("FromAccount", typeof(string));
    
            var toAccountParameter = toAccount != null ?
                new ObjectParameter("ToAccount", toAccount) :
                new ObjectParameter("ToAccount", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCashFlow_Result>("spCashFlow", cashAccountParameter, fromAccountParameter, toAccountParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<spCashFlowNew_Result> spCashFlowNew(string cashAccount, string fromAccount, string toAccount, string fromDate, string toDate)
        {
            var cashAccountParameter = cashAccount != null ?
                new ObjectParameter("CashAccount", cashAccount) :
                new ObjectParameter("CashAccount", typeof(string));
    
            var fromAccountParameter = fromAccount != null ?
                new ObjectParameter("FromAccount", fromAccount) :
                new ObjectParameter("FromAccount", typeof(string));
    
            var toAccountParameter = toAccount != null ?
                new ObjectParameter("ToAccount", toAccount) :
                new ObjectParameter("ToAccount", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCashFlowNew_Result>("spCashFlowNew", cashAccountParameter, fromAccountParameter, toAccountParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<spCashFlowTrans_Result> spCashFlowTrans(string cashAccount, string fromAccount, string toAccount, string fromDate, string toDate)
        {
            var cashAccountParameter = cashAccount != null ?
                new ObjectParameter("CashAccount", cashAccount) :
                new ObjectParameter("CashAccount", typeof(string));
    
            var fromAccountParameter = fromAccount != null ?
                new ObjectParameter("FromAccount", fromAccount) :
                new ObjectParameter("FromAccount", typeof(string));
    
            var toAccountParameter = toAccount != null ?
                new ObjectParameter("ToAccount", toAccount) :
                new ObjectParameter("ToAccount", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCashFlowTrans_Result>("spCashFlowTrans", cashAccountParameter, fromAccountParameter, toAccountParameter, fromDateParameter, toDateParameter);
        }
    }
}
